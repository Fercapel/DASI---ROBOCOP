import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.InformeDeTarea;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.ItfUsoRecursoTrazas;
import icaro.infraestructura.recursosOrganizacion.recursoTrazas.imp.componentes.InfoTraza;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.*;
import icaro.infraestructura.patronAgenteCognitivo.procesadorObjetivos.gestorTareas.ItfGestorTareas;
//import icaro.aplicaciones.Rosace.informacion.*;
//import icaro.aplicaciones.Rosace.tareasComunes.*;
import icaro.aplicaciones.Robocop.*;
import icaro.aplicaciones.agentes.agenteComisaria.objetivos.*;
import icaro.aplicaciones.agentes.agenteComisaria.tareas.*;
import icaro.infraestructura.entidadesBasicas.procesadorCognitivo.Objetivo;

import java.util.ArrayList;
import java.lang.String;


global ItfGestorTareas gestorTareas;
global ItfUsoRecursoTrazas recursoTrazas;
global String agentId;

//Primera regla que se ejecutara. Solo se debe disparar una vez.
rule "Acciones Iniciales Prueba Cambio Rol "
 when
	not ( exists(Focus()))
 then
	TareaSincrona tarea2 = gestorTareas.crearTareaSincrona(InicializarComisaria.class);
	tarea2.ejecutar( );   
	System.out.println( "\n"+agentId +"EJECUTO LA REGLA Acciones Iniciales\n\n" ); 
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," :REGLA " + drools.getRule().getName());
end

rule "Acciones Iniciales Objetivo "
 when
	focoActual : Focus(foco == null)
	not ( exists(Objetivo()))
 then
	Objetivo ob2 = new DefinirMiEquipo();
    insert(ob2);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
end

rule "Regla de focalizacion de observar entorno"
 when
    obj:DefinirMiEquipo(state==Objetivo.PENDING)
    f:Focus(foco == null)
 then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    update(f);
end

rule "Regla de resolucion de observar entorno"
 when
    obj:DefinirMiEquipo(state==Objetivo.PENDING)
    // miEquipo: InfoEquipo(inicioContactoConEquipo == false)
    f:Focus(foco==obj)
    not( exists ( InfoEquipo(inicioContactoConEquipo == false)  ))
 then
    obj.setState(Objetivo.SOLVING);
    update(obj);
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(FormarEquipo.class);
 	tarea.ejecutar();  
 	
 	obj.setState(Objetivo.REFINED);
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," ESTADO ACTUAL: " + f.getFoco());
end

rule "Regla de finalizacion de observar entorno"
 when
    obj:DefinirMiEquipo(state==Objetivo.SOLVED)
    f:Focus(foco==obj)
 then
 	f.setFoco(null);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId,"Nuevo Foco : " + f.getFoco());
    retract(obj);
    update(f);
end


/*
rule "Regla de focalizacion de observar entorno"
 when
    obj:SaludarPolicia(state==Objetivo.PENDING)
    f:Focus(foco == null)
 then
    f.setFoco(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    update(f);
end

rule "Regla de resolucion de observar entorno"
 when
    obj:SaludarPolicia(state==Objetivo.PENDING)
    f:Focus(foco==obj)
 then
    obj.setState(Objetivo.SOLVING);
    update(obj);
    TareaSincrona tarea = gestorTareas.crearTareaSincrona(MandarMensajeAPolicia.class);
 	tarea.ejecutar("Hola Policia1, soy la Comisaria", "Policia1");  
 	obj.setState(Objetivo.SOLVED);
    update(obj);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," ESTADO ACTUAL: " + f.getFoco());
end

rule "Regla de finalizacion de observar entorno"
 when
    obj:SaludarPolicia(state==Objetivo.SOLVED)
    f:Focus(foco==obj)
 then
 	f.setFoco(null);
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId," EJECUTO LA REGLA: " + drools.getRule().getName());
    recursoTrazas.aceptaNuevaTrazaEjecReglas(agentId,"Nuevo Foco : " + f.getFoco());
    retract(obj);
    update(f);
end

*/